<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Transferring Data on Lane Cluster Documentation</title><link>https://mguler.github.io/lane_cluster/slurm-basics/transferring-data/</link><description>Recent content in Transferring Data on Lane Cluster Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://mguler.github.io/lane_cluster/slurm-basics/transferring-data/index.xml" rel="self" type="application/rss+xml"/><item><title>rsync</title><link>https://mguler.github.io/lane_cluster/slurm-basics/transferring-data/rsync/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mguler.github.io/lane_cluster/slurm-basics/transferring-data/rsync/</guid><description>This is another cp-like command with support for file transfer over networks. However, as the name suggests, this is a sync operation. This means that if some files exist unmodified in both the source and destination they will not be copied, saving some time. Additionally, rsync is considerably more flexible than scp with the trade-off of being a bit more complicated to use. Just like scp, rsync respects ssh configurations. The man page for rsync includes many examples that are useful.</description></item><item><title>scp</title><link>https://mguler.github.io/lane_cluster/slurm-basics/transferring-data/scp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mguler.github.io/lane_cluster/slurm-basics/transferring-data/scp/</guid><description>The simplest way to transfer files is via scp. This functions similarly to cp, but operates over a network connection. It will respect your ssh configuration, so you can use Host definitions in the commands. For example, if you have set up the Lane ssh configuration entry as suggested you can do the following to download a file to your current local directory:
scp lane:/PATH/TO/FILE . Uploading operates similarly.
scp /PATH/TO/FILE lane:/PATH/TO/REMOTE/DESTINATION For directories use the -r flag to download/upload recursively.</description></item></channel></rss>