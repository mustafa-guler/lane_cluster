<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Modules on Lane Cluster Documentation</title><link>https://mustafa-guler.github.io/lane_custer/dependency-management/modules/</link><description>Recent content in Modules on Lane Cluster Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://mustafa-guler.github.io/lane_custer/dependency-management/modules/index.xml" rel="self" type="application/rss+xml"/><item><title>Modulefile Directories</title><link>https://mustafa-guler.github.io/lane_custer/dependency-management/modules/modulefile-dirs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mustafa-guler.github.io/lane_custer/dependency-management/modules/modulefile-dirs/</guid><description>The way available modules are determined is by modulefiles in directories. You can add your own modulefile directory with module use PATH/TO/DIR. Let&amp;rsquo;s use my own modulefile directory and see what we have.
module use /projects/mohimanilab/mustafa/tools/modulefiles module avail # output (only new section) # # ----------------------------------------------- /projects/mohimanilab/mustafa/tools/modulefiles ----------------------------------------------- # cudatoolkit/10.0 cudnn/6.0 fingerprinter tfcuda/1.10 tfcuda/1.15 tfcuda/1.6 tfcuda/2.1 # cudatoolkit/10.1 cudnn/7.4 proteowizard tfcuda/1.11 tfcuda/1.2 tfcuda/1.7 tfcuda/2.2 # cudatoolkit/8.0 cudnn/7.6 rust tfcuda/1.12 tfcuda/1.3 tfcuda/1.</description></item><item><title>Modulefile Format</title><link>https://mustafa-guler.github.io/lane_custer/dependency-management/modules/modulefile-fmt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mustafa-guler.github.io/lane_custer/dependency-management/modules/modulefile-fmt/</guid><description>We showed previously modulefiles must begin with the magic cookie #%Module, but what do modulefiles consist of? Modulefiles are Tcl scripts that modify a user&amp;rsquo;s environment. Let&amp;rsquo;s look at my rust module as an example.
# contents of /projects/mohimanilab/mustafa/tools/modulefiles/rust #%Module ## ## Rust modulefile ## ## modulefiles/ ## set ver 1.39.0 set msg &amp;#34;This module adds necessary paths and variables to use rust&amp;#34; proc ModulesHelp { } { puts stderr $msg } module-whatis &amp;#34;Use rust $ver&amp;#34; prepend-path PATH /projects/mohimanilab/mustafa/cargo/bin This is a very simple modulefile.</description></item><item><title>Using Modules</title><link>https://mustafa-guler.github.io/lane_custer/dependency-management/modules/using-modules/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mustafa-guler.github.io/lane_custer/dependency-management/modules/using-modules/</guid><description>Once you have added a modulefile directory with module use you can load modules with module load and unload them with module unload. At any point you can use module list to see what modules you have active. Additionally, you can use module purge to unload all loaded modules. You can add module load commands to the beginning of jobs scripts to use modules in your jobs. For more information on submitting jobs see Submitting Jobs.</description></item><item><title>Module Command Summary</title><link>https://mustafa-guler.github.io/lane_custer/dependency-management/modules/summary/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mustafa-guler.github.io/lane_custer/dependency-management/modules/summary/</guid><description> Command Description module load MODULE Activates a module MODULE, running its modulefile module unload MODULE Removes an active module MODULE, undoing everything done in its modulefile module add MODULE Same as module load MODULE module rm MODULE Same as module unload MODULE module show MODULE Show what module MODULE will do when loaded module list Show all loaded modules module avail Show all available modules module purge Unload all loaded modules module use DIR Use DIR as a modulefile directory</description></item><item><title>Lane's Default Modules</title><link>https://mustafa-guler.github.io/lane_custer/dependency-management/modules/lane-defaults/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mustafa-guler.github.io/lane_custer/dependency-management/modules/lane-defaults/</guid><description>Without any other modification you can run module avail to see what default modules are available on Lane.
module avail # output: # # ------------------------------------------------------- /usr/share/Modules/modulefiles -------------------------------------------------------- # cuda-10.0 matlab-9.5 R-3.5.3 singularity/ImageMagick-v6.9.10-23 # cuda-8.0 matlab-9.7 rocks-openmpi singularity/KNIME-v4.1.1 # cudnn-10.0-7.3 module-git rocks-openmpi_ib singularity/meme-suite-v5.1.0 # cudnn-8.0-7.1 module-info singularity/bedtools-v2.29.2 singularity/neofetch-v7.0.0 # dot modules singularity/bftools-v6.3.1 singularity/r-base-v3.6.2 # ffmpeg-4.2.2 null singularity/cellorganizer-v2.8.1 singularity/samtools-v1.10 # gurobi902 opt-perl singularity/cowsay-v3.03 singularity/texlive-v3.14 # java-1.8.0 python27 singularity/FastQC-v0.11.9 use.own # maple2019 python27-extras singularity/gcc-v8.</description></item></channel></rss>