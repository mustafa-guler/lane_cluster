<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Conda on Lane Cluster Documentation</title><link>https://mguler.github.io/lane_cluster/dependency-management/conda/</link><description>Recent content in Conda on Lane Cluster Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://mguler.github.io/lane_cluster/dependency-management/conda/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating Conda Environments</title><link>https://mguler.github.io/lane_cluster/dependency-management/conda/creating-envs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mguler.github.io/lane_cluster/dependency-management/conda/creating-envs/</guid><description>You can create conda environments with the conda create command. For more information about the last example see Transferring Conda Environments.
# create an environment named py27 that contains python 2.7 conda create -n py27 python=2.7 # create an environment named rdkit that contains a python 3 version and compatible rdkit installation conda create -n rdkit -c conda-forge python=3 rdkit # copy the rdkit environment to another environment named new_rdkit conda create -n new_rdkit --clone rdkit # create environment from environment.</description></item><item><title>Using Conda Environments</title><link>https://mguler.github.io/lane_cluster/dependency-management/conda/using-envs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mguler.github.io/lane_cluster/dependency-management/conda/using-envs/</guid><description>After you have created an environment you need to activate it before you can access its contents. If you are running an interactive job you can do this via conda activate ENV_NAME. However, this does not always work as expected when it is part of a job submitting with sbatch (See Submitting Jobs for more information on job submission). You can work around this by activating a conda environment with the command</description></item><item><title>Transferring Conda Environments</title><link>https://mguler.github.io/lane_cluster/dependency-management/conda/transferring-envs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mguler.github.io/lane_cluster/dependency-management/conda/transferring-envs/</guid><description>Once you have set up an environment the way you like it you may want to use the same environment on a different machine. If the other machine is running the same overarching OS as yours (running Linux locally and remotely is the most common case of this) you can simply run
conda activate ENV_NAME conda env export | grep -v &amp;#34;^prefix&amp;#34; &amp;gt; environment.yaml This will create an environment.yaml file that contains all the packages you install in this conda environment along with their frozen versions.</description></item><item><title>Installing Conda</title><link>https://mguler.github.io/lane_cluster/dependency-management/conda/installing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mguler.github.io/lane_cluster/dependency-management/conda/installing/</guid><description>You may already have conda installed under a shared FS for your lab. Check if this is the case before proceeding. If you use this installation please make sure you do not modify existing environments, as it could break other users&amp;rsquo; workflows.
To install your own copy go to the Miniconda installation page and copy the link to the latest linux installer. As of writing this it is for Python 3.</description></item></channel></rss>